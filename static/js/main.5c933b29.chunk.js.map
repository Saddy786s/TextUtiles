{"version":3,"sources":["Components/Navbar.js","Components/TextForm.js","Components/Alert.js","Components/About.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","react_default","a","createElement","className","concat","mode","react_router_dom","to","style","color","type","data-bs-toggle","data-bs-target","aria-controls","aria-expanded","aria-label","id","aria-current","home","onClick","togglemodeblue","togglemodered","togglemodegreen","togglemodeyellow","role","togglemode","htmlFor","TextForm","_useState","useState","_useState2","Object","slicedToArray","text","setText","keepbtnprimary","word","value","onChange","event","target","rows","backgroundColor","disabled","length","newText","toUpperCase","showAlert","toLowerCase","msg","SpeechSynthesisUtterance","window","speechSynthesis","speak","document","getElementById","select","navigator","clipboard","writeText","getSelection","removeAllRanges","split","join","filter","element","lenght","Alert","height","alert","lower","charAt","slice","capitalise","About","aria-labelledby","data-bs-parent","App","Mode","setMode","_useState3","_useState4","setAlert","message","setTimeout","Fragment","body","Components_Alert","react_router","path","Components_About","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","render","StrictMode","src_App"],"mappings":"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","file":"static/js/main.5c933b29.chunk.js","sourcesContent":["import React from 'react'\nimport '../App.css';\nimport { Link } from \"react-router-dom\";\n\nexport default function Navbar(props) {\n  // const [mystyle, setmystyle] = useState({\n  //   color:'black',\n  //   backgroundColor: 'white'\n  // })\n  // const [btntext, setbtntext] = useState(\"Enable Dark Mode\")\n\n  // const togglestyle = () =>{\n  //   if (mystyle.color === 'white') {\n  //     setmystyle({\n  //       color:'black',\n  //   backgroundColor: 'white'\n  // })\n  // console.log(\"Dark mode enabled\");\n  //     setbtntext(\"Enable Dark mode\");\n  //   }\n  //   else{\n  //     setmystyle({\n  //       color:'white',\n  //   backgroundColor: 'black'\n  //     })\n  //     setbtntext(\"Enable Light Mode\")\n  //   }\n  // }\n\n  return (\n    <nav className={`navbar navbar-expand-lg bg-${props.mode} `} >\n  <div className=\"container-fluid\" >\n    <Link className=\"navbar-brand\" to=\"/\" style={{color:\"#0000fd\"}}>TextUtiles</Link>\n    <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n      <span className=\"navbar-toggler-icon\"></span>\n    </button>\n    <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\" >\n      <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\" >\n        <li className=\"nav-item\">\n          <Link style={{color:\"#0000fd\"}} className=\"nav-link active\" aria-current=\"page\" to=\"/\">{props.home}</Link>\n        </li>\n        <li className=\"nav-item\">\n          <Link style={{color:\"#0000fd\"}} className=\"nav-link\" to=\"/about\">About</Link>\n        </li>\n      </ul>\n      <button type='button' className='setcolorbtn setcolorbtnblue' onClick={props.togglemodeblue}>  </button>\n      <button type='button' className='setcolorbtn setcolorbtnred' onClick={props.togglemodered}>  </button>\n      <button type='button' className='setcolorbtn setcolorbtngreen' onClick={props.togglemodegreen}>  </button>\n      <button type='button' className='setcolorbtn setcolorbtnyellow' onClick={props.togglemodeyellow}>  </button>\n      <form className=\"d-flex\" role=\"search\">\n      <div className=\"form-check form-switch\">\n  <input className=\"form-check-input\" type=\"checkbox\" onClick={props.togglemode} id=\"flexSwitchCheckDefault\"/>\n  <label className={`form-check-label text-${props.mode==='light'?'grey':'white'}`} htmlFor=\"flexSwitchCheckDefault\">Enable Dark Mode</label>\n</div>\n      </form>\n    </div>\n  </div>\n</nav>\n  )\n}\n","import React, {useState}  from 'react'\n\nexport default function TextForm(props) {\n    const [text,setText] = useState('');\n    const handleUpClick=()=>{\n        let newText = text.toUpperCase();\n        setText(newText);\n        props.showAlert(\"Converted to Uppercase\",\"success\");\n    }\n    const handleOnChange=(event)=>{\n        setText(event.target.value);\n    }\n    const handleLoClick = ()=>{\n        let newText = text.toLowerCase();\n        setText(newText);\n        props.showAlert(\"Converted to Lowercase\",\"success\");\n    }\n    const handleClClick = ()=>{\n        let newText = \"\";\n        setText(newText);\n        props.showAlert(\"Text cleared\",\"success\");\n    }\n    const speak = () => {\n        let msg = new SpeechSynthesisUtterance();\n        msg.text = text;\n        window.speechSynthesis.speak(msg);\n        props.showAlert(\"Speaking\",\"success\");\n      }\n    const handleMyCopy = () =>{\n        var text = document.getElementById(\"myBox\");\n        text.select();\n        navigator.clipboard.writeText(text.value);\n        document.getSelection().removeAllRanges();\n        props.showAlert(\"Text copied\",\"success\");\n    }\n    const handleExtraSpace = ()=>{\n        let newText = text.split(/[ ]+/);\n        setText(newText.join(\" \"));\n        props.showAlert(\"Extra Spaces Removed!\",\"success\");\n    }\n    const keepbtnprimary = (word) => {\n        if (word === 'light' || word === 'dark') {\n            return \"primary\";\n        }\n        else{\n            return props.mode;\n        }\n    }\n    return (\n        <div>\n            <div className=\"mb-3\" style={{color: props.mode==='dark'?'white':'black'}}>\n                <h4>Enter Text Here</h4>\n                <textarea className=\"form-control\" value={text} onChange={handleOnChange} id=\"myBox\" rows=\"8\" style={{backgroundColor: props.mode==='dark'?'#3d3d3d':'white', color: props.mode==='dark'?'white':'black'}}></textarea>\n                <button disabled={text.length===0} type=\"button\" className={`btn btn-${keepbtnprimary(props.mode)} my-3 mx-2`} onClick={handleUpClick}>Convert To UpperCase</button>\n                <button disabled={text.length===0} type=\"button\" className={`btn btn-${keepbtnprimary(props.mode)} my-3 mx-2`} onClick={handleLoClick}>Convert To LowerCase</button>\n                <button disabled={text.length===0} type=\"button\" className={`btn btn-${keepbtnprimary(props.mode)} my-3 mx-2`} onClick={handleClClick}>Clear Text</button>\n                <button disabled={text.length===0} type=\"submit\" onClick={speak} className={`btn btn-${keepbtnprimary(props.mode)} mx-2 my-2`}>Speak</button>\n                <button disabled={text.length===0} type=\"button\" className={`btn btn-${keepbtnprimary(props.mode)} my-3 mx-2`} onClick={handleMyCopy}>Copy Text</button>\n                <button disabled={text.length===0} type=\"button\" className={`btn btn-${keepbtnprimary(props.mode)} my-3 mx-2`} onClick={handleExtraSpace}>Remove Extra Space</button>\n            </div>\n            <div style={{color: props.mode==='dark'?'white':'black'}}>\n                <h2>Your Text Summery</h2>\n                <p>{text.split(/\\s+/).filter((element)=>{return element.length!==0}).length } Words and {text.length} Characters</p>\n                <p>This text is readable in {text.lenght=== '0'?'0':0.008 * text.split(\" \").filter((element)=>{return element.length !== 0}).length} Minutes</p>\n                <h2>Preview</h2>\n                <p>{text.length>0?text:'Nothing to Preview'}</p>\n            </div>\n        </div>\n    )\n}\n","import React from 'react'\n\nfunction Alert(props) {\n    const capitalise = (word) =>{\n        const lower  = word.toLowerCase();\n        return lower.charAt(0).toUpperCase() + lower.slice(1);\n    }\n\n    return (\n        <div style={{height:'60px'}}>\n       {props.alert && <div className={`alert alert-${props.alert.type} alert-dismissible fade show`} role=\"alert\">\n            {capitalise(props.alert.type)} : {props.alert.msg}\n            </div>}\n        </div>\n    )\n}\n\nexport default Alert\n","import React from 'react'\n\nfunction About() {\n  return (\n    <div className=\"accordion\" id=\"accordionExample\">\n  <div className=\"accordion-item\">\n    <h2 className=\"accordion-header\" id=\"headingOne\">\n      <button className=\"accordion-button\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#collapseOne\" aria-expanded=\"true\" aria-controls=\"collapseOne\">\n        Accordion Item #1\n      </button>\n    </h2>\n    <div id=\"collapseOne\" className=\"accordion-collapse collapse show\" aria-labelledby=\"headingOne\" data-bs-parent=\"#accordionExample\">\n      <div className=\"accordion-body\">\n        <strong>This is the first item's accordion body.</strong> It is shown by default, until the collapse plugin adds the appropriate classes that we use to style each element. These classes control the overall appearance, as well as the showing and hiding via CSS transitions. You can modify any of this with custom CSS or overriding our default variables. It's also worth noting that just about any HTML can go within the <code>.accordion-body</code>, though the transition does limit overflow.\n      </div>\n    </div>\n  </div>\n  <div className=\"accordion-item\">\n    <h2 className=\"accordion-header\" id=\"headingTwo\">\n      <button className=\"accordion-button collapsed\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#collapseTwo\" aria-expanded=\"false\" aria-controls=\"collapseTwo\">\n        Accordion Item #2\n      </button>\n    </h2>\n    <div id=\"collapseTwo\" className=\"accordion-collapse collapse\" aria-labelledby=\"headingTwo\" data-bs-parent=\"#accordionExample\">\n      <div className=\"accordion-body\">\n        <strong>This is the second item's accordion body.</strong> It is hidden by default, until the collapse plugin adds the appropriate classes that we use to style each element. These classes control the overall appearance, as well as the showing and hiding via CSS transitions. You can modify any of this with custom CSS or overriding our default variables. It's also worth noting that just about any HTML can go within the <code>.accordion-body</code>, though the transition does limit overflow.\n      </div>\n    </div>\n  </div>\n  <div className=\"accordion-item\">\n    <h2 className=\"accordion-header\" id=\"headingThree\">\n      <button className=\"accordion-button collapsed\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#collapseThree\" aria-expanded=\"false\" aria-controls=\"collapseThree\">\n        Accordion Item #3\n      </button>\n    </h2>\n    <div id=\"collapseThree\" className=\"accordion-collapse collapse\" aria-labelledby=\"headingThree\" data-bs-parent=\"#accordionExample\">\n      <div className=\"accordion-body\">\n        <strong>This is the third item's accordion body.</strong> It is hidden by default, until the collapse plugin adds the appropriate classes that we use to style each element. These classes control the overall appearance, as well as the showing and hiding via CSS transitions. You can modify any of this with custom CSS or overriding our default variables. It's also worth noting that just about any HTML can go within the <code>.accordion-body</code>, though the transition does limit overflow.\n      </div>\n    </div>\n  </div>\n</div>\n  )\n}\n\nexport default About\n","import './App.css';\nimport Navbar from './Components/Navbar';\nimport TextForm from './Components/TextForm';\nimport Alert from './Components/Alert';\nimport About from './Components/About';\nimport React, {useState} from 'react'\nimport {\n  BrowserRouter,\n  Routes,\n  Route,\n} from \"react-router-dom\";\n\n\nfunction App() {\n  const [Mode , setMode] = useState(\"light\");\n  const [alert , setAlert] = useState(null);\n  const showAlert = (message, type) =>{\n    setAlert({\n      msg:message,\n      type:type\n    })\n    setTimeout(() => {\n      setAlert(null);\n    }, 1000);\n  }\n  const togglemodeblue = () =>{\n    setMode('primary');\n    document.body.style.backgroundColor = 'blue' ;\n  }\n  const togglemodered = () =>{\n    setMode('danger');\n    document.body.style.backgroundColor = '#ff5d5d' ;\n  }\n  const togglemodegreen = () =>{\n    setMode('success');\n    document.body.style.backgroundColor = 'green' ;\n  }\n  const togglemodeyellow = () =>{\n    setMode('warning');\n    document.body.style.backgroundColor = 'yellow' ;\n  }\n const togglemode = () =>{\n    if(Mode === 'light' || Mode === 'primary' || Mode === 'danger' || Mode === 'success' || Mode === 'warning' ){\n      setMode('dark');\n      document.body.style.backgroundColor = '#3d3d3d' ;\n      showAlert(\"Dark Mode Enabled\",\"success\")\n    }\n    else {\n      setMode('light');\n      document.body.style.backgroundColor = 'white' ;\n      showAlert(\"Light Mode Enabled\",\"success\")\n    }\n }\n  return (\n    <>\n   <BrowserRouter>\n   <Navbar home = \"Home\" mode={Mode} togglemode = {togglemode} togglemodeblue = {togglemodeblue} togglemodered = {togglemodered} togglemodegreen = {togglemodegreen} togglemodeyellow = {togglemodeyellow} />\n   <Alert alert={alert}/>\n   <div className=\"container\" >\n      <Routes>\n        <Route path=\"/\" element={<TextForm showAlert={showAlert} mode={Mode}/>} />\n        <Route path=\"about\" element={<About/>} />\n      </Routes>\n   </div>\n   </BrowserRouter>\n   </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}