{"version":3,"sources":["Components/Navbar.js","Components/TextForm.js","Components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","react_default","a","createElement","className","concat","mode","href","style","color","type","data-bs-toggle","data-bs-target","aria-controls","aria-expanded","aria-label","id","aria-current","home","onClick","togglemodeblue","togglemodered","togglemodegreen","togglemodeyellow","role","togglemode","htmlFor","TextForm","_useState","useState","_useState2","Object","slicedToArray","text","setText","keepbtnprimary","word","value","onChange","event","target","rows","backgroundColor","disabled","length","newText","toUpperCase","showAlert","toLowerCase","msg","SpeechSynthesisUtterance","window","speechSynthesis","speak","document","getElementById","select","navigator","clipboard","writeText","getSelection","removeAllRanges","split","join","filter","element","lenght","Alert","height","alert","lower","charAt","slice","capitalise","App","Mode","setMode","_useState3","_useState4","setAlert","message","setTimeout","Fragment","body","Components_Alert","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","render","StrictMode","src_App"],"mappings":"6KAGe,SAASA,EAAOC,GAyB7B,OACEC,EAAAC,EAAAC,cAAA,OAAKC,UAAS,8BAAAC,OAAgCL,EAAMM,KAAtC,MAChBL,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mBACbH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,eAAeG,KAAK,IAAIC,MAAO,CAACC,MAAM,YAAnD,cACAR,EAAAC,EAAAC,cAAA,UAAQC,UAAU,iBAAiBM,KAAK,SAASC,iBAAe,WAAWC,iBAAe,0BAA0BC,gBAAc,yBAAyBC,gBAAc,QAAQC,aAAW,qBAC1Ld,EAAAC,EAAAC,cAAA,QAAMC,UAAU,yBAElBH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,2BAA2BY,GAAG,0BAC3Cf,EAAAC,EAAAC,cAAA,MAAIC,UAAU,mCACZH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,YACZH,EAAAC,EAAAC,cAAA,KAAGK,MAAO,CAACC,MAAM,WAAYL,UAAU,kBAAkBa,eAAa,OAAOV,KAAK,KAAKP,EAAMkB,QAGjGjB,EAAAC,EAAAC,cAAA,UAAQO,KAAK,SAASN,UAAU,8BAA8Be,QAASnB,EAAMoB,gBAA7E,MACAnB,EAAAC,EAAAC,cAAA,UAAQO,KAAK,SAASN,UAAU,6BAA6Be,QAASnB,EAAMqB,eAA5E,MACApB,EAAAC,EAAAC,cAAA,UAAQO,KAAK,SAASN,UAAU,+BAA+Be,QAASnB,EAAMsB,iBAA9E,MACArB,EAAAC,EAAAC,cAAA,UAAQO,KAAK,SAASN,UAAU,gCAAgCe,QAASnB,EAAMuB,kBAA/E,MACAtB,EAAAC,EAAAC,cAAA,QAAMC,UAAU,SAASoB,KAAK,UAC9BvB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,0BACnBH,EAAAC,EAAAC,cAAA,SAAOC,UAAU,mBAAmBM,KAAK,WAAWS,QAASnB,EAAMyB,WAAYT,GAAG,2BAClFf,EAAAC,EAAAC,cAAA,SAAOC,UAAS,yBAAAC,OAAwC,UAAbL,EAAMM,KAAe,OAAO,SAAWoB,QAAQ,0BAA1F,yBC9Ca,SAASC,EAAS3B,GAAO,IAAA4B,EACbC,mBAAS,IADIC,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GAC7BK,EAD6BH,EAAA,GACxBI,EADwBJ,EAAA,GAsC9BK,EAAiB,SAACC,GACpB,MAAa,UAATA,GAA6B,SAATA,EACb,UAGApC,EAAMM,MAGrB,OACIL,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OAAOI,MAAO,CAACC,MAAoB,SAAbT,EAAMM,KAAc,QAAQ,UAC7DL,EAAAC,EAAAC,cAAA,6BACAF,EAAAC,EAAAC,cAAA,YAAUC,UAAU,eAAeiC,MAAOJ,EAAMK,SA3CvC,SAACC,GAClBL,EAAQK,EAAMC,OAAOH,QA0C6DrB,GAAG,QAAQyB,KAAK,IAAIjC,MAAO,CAACkC,gBAA8B,SAAb1C,EAAMM,KAAc,UAAU,QAASG,MAAoB,SAAbT,EAAMM,KAAc,QAAQ,WACjML,EAAAC,EAAAC,cAAA,UAAQwC,SAAwB,IAAdV,EAAKW,OAAYlC,KAAK,SAASN,UAAS,WAAAC,OAAa8B,EAAenC,EAAMM,MAAlC,cAAqDa,QAjDvG,WAChB,IAAI0B,EAAUZ,EAAKa,cACnBZ,EAAQW,GACR7C,EAAM+C,UAAU,yBAAyB,aA8CjC,wBACA9C,EAAAC,EAAAC,cAAA,UAAQwC,SAAwB,IAAdV,EAAKW,OAAYlC,KAAK,SAASN,UAAS,WAAAC,OAAa8B,EAAenC,EAAMM,MAAlC,cAAqDa,QA1CrG,WAClB,IAAI0B,EAAUZ,EAAKe,cACnBd,EAAQW,GACR7C,EAAM+C,UAAU,yBAAyB,aAuCjC,wBACA9C,EAAAC,EAAAC,cAAA,UAAQwC,SAAwB,IAAdV,EAAKW,OAAYlC,KAAK,SAASN,UAAS,WAAAC,OAAa8B,EAAenC,EAAMM,MAAlC,cAAqDa,QAtCrG,WAElBe,EADc,IAEdlC,EAAM+C,UAAU,eAAe,aAmCvB,cACA9C,EAAAC,EAAAC,cAAA,UAAQwC,SAAwB,IAAdV,EAAKW,OAAYlC,KAAK,SAASS,QAlC/C,WACV,IAAI8B,EAAM,IAAIC,yBACdD,EAAIhB,KAAOA,EACXkB,OAAOC,gBAAgBC,MAAMJ,GAC7BjD,EAAM+C,UAAU,WAAW,YA8B8C3C,UAAS,WAAAC,OAAa8B,EAAenC,EAAMM,MAAlC,eAA1E,SACAL,EAAAC,EAAAC,cAAA,UAAQwC,SAAwB,IAAdV,EAAKW,OAAYlC,KAAK,SAASN,UAAS,WAAAC,OAAa8B,EAAenC,EAAMM,MAAlC,cAAqDa,QA7BtG,WACjB,IAAIc,EAAOqB,SAASC,eAAe,SACnCtB,EAAKuB,SACLC,UAAUC,UAAUC,UAAU1B,EAAKI,OACnCiB,SAASM,eAAeC,kBACxB7D,EAAM+C,UAAU,cAAc,aAwBtB,aACA9C,EAAAC,EAAAC,cAAA,UAAQwC,SAAwB,IAAdV,EAAKW,OAAYlC,KAAK,SAASN,UAAS,WAAAC,OAAa8B,EAAenC,EAAMM,MAAlC,cAAqDa,QAvBlG,WACrB,IAAI0B,EAAUZ,EAAK6B,MAAM,QACzB5B,EAAQW,EAAQkB,KAAK,MACrB/D,EAAM+C,UAAU,wBAAwB,aAoBhC,uBAEJ9C,EAAAC,EAAAC,cAAA,OAAKK,MAAO,CAACC,MAAoB,SAAbT,EAAMM,KAAc,QAAQ,UAC5CL,EAAAC,EAAAC,cAAA,+BACAF,EAAAC,EAAAC,cAAA,SAAI8B,EAAK6B,MAAM,OAAOE,OAAO,SAACC,GAAW,OAAwB,IAAjBA,EAAQrB,SAAaA,OAArE,cAAyFX,EAAKW,OAA9F,eACA3C,EAAAC,EAAAC,cAAA,qCAA4C,MAAf8B,EAAKiC,OAAc,IAAI,KAAQjC,EAAK6B,MAAM,KAAKE,OAAO,SAACC,GAAW,OAA0B,IAAnBA,EAAQrB,SAAeA,OAA7H,YACA3C,EAAAC,EAAAC,cAAA,qBACAF,EAAAC,EAAAC,cAAA,SAAI8B,EAAKW,OAAO,EAAEX,EAAK,wBChDxBkC,MAff,SAAenE,GAMX,OACIC,EAAAC,EAAAC,cAAA,OAAKK,MAAO,CAAC4D,OAAO,SACpBpE,EAAMqE,OAASpE,EAAAC,EAAAC,cAAA,OAAKC,UAAS,eAAAC,OAAiBL,EAAMqE,MAAM3D,KAA7B,gCAAiEc,KAAK,SAPpF,SAACY,GAChB,IAAMkC,EAASlC,EAAKY,cACpB,OAAOsB,EAAMC,OAAO,GAAGzB,cAAgBwB,EAAME,MAAM,GAM9CC,CAAWzE,EAAMqE,MAAM3D,MADb,MACuBV,EAAMqE,MAAMpB,OC+C3CyB,MAnDf,WAAe,IAAA9C,EACYC,mBAAS,SADrBC,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GACN+C,EADM7C,EAAA,GACC8C,EADD9C,EAAA,GAAA+C,EAEchD,mBAAS,MAFvBiD,EAAA/C,OAAAC,EAAA,EAAAD,CAAA8C,EAAA,GAENR,EAFMS,EAAA,GAEEC,EAFFD,EAAA,GAGP/B,EAAY,SAACiC,EAAStE,GAC1BqE,EAAS,CACP9B,IAAI+B,EACJtE,KAAKA,IAEPuE,WAAW,WACTF,EAAS,OACR,MA8BL,OACE9E,EAAAC,EAAAC,cAAAF,EAAAC,EAAAgF,SAAA,KACDjF,EAAAC,EAAAC,cAACJ,EAAD,CAAQmB,KAAO,OAAOZ,KAAMqE,EAAMlD,WAdjB,WACJ,UAATkD,GAA6B,YAATA,GAA+B,WAATA,GAA8B,YAATA,GAA+B,YAATA,GACtFC,EAAQ,QACRtB,SAAS6B,KAAK3E,MAAMkC,gBAAkB,UACtCK,EAAU,oBAAoB,aAG9B6B,EAAQ,SACRtB,SAAS6B,KAAK3E,MAAMkC,gBAAkB,QACtCK,EAAU,qBAAqB,aAK0B3B,eA9BtC,WACrBwD,EAAQ,WACRtB,SAAS6B,KAAK3E,MAAMkC,gBAAkB,QA4BuDrB,cA1BzE,WACpBuD,EAAQ,UACRtB,SAAS6B,KAAK3E,MAAMkC,gBAAkB,WAwBuFpB,gBAtBvG,WACtBsD,EAAQ,WACRtB,SAAS6B,KAAK3E,MAAMkC,gBAAkB,SAoB2HnB,iBAlB1I,WACvBqD,EAAQ,WACRtB,SAAS6B,KAAK3E,MAAMkC,gBAAkB,YAiBvCzC,EAAAC,EAAAC,cAACiF,EAAD,CAAOf,MAAOA,IACdpE,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACfH,EAAAC,EAAAC,cAACwB,EAAD,CAAUoB,UAAWA,EAAWzC,KAAMqE,OCxC1BU,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxCC,EAAAC,EAAA,GAAAC,KAAAF,EAAAG,KAAA,UAAqBD,KAAK,SAAAE,GAAiD,IAA9CC,EAA8CD,EAA9CC,OAAQC,EAAsCF,EAAtCE,OAAQC,EAA8BH,EAA9BG,OAAQC,EAAsBJ,EAAtBI,OAAQC,EAAcL,EAAdK,QAC3DJ,EAAOP,GACPQ,EAAOR,GACPS,EAAOT,GACPU,EAAOV,GACPW,EAAQX,MCDDY,IAASC,WAAW7C,SAASC,eAAe,SACpD6C,OACHnG,EAAAC,EAAAC,cAACF,EAAAC,EAAMmG,WAAP,KACEpG,EAAAC,EAAAC,cAACmG,EAAD,QAOJjB","file":"static/js/main.ac7e73a1.chunk.js","sourcesContent":["import React from 'react'\nimport '../App.css';\n\nexport default function Navbar(props) {\n  // const [mystyle, setmystyle] = useState({\n  //   color:'black',\n  //   backgroundColor: 'white'\n  // })\n  // const [btntext, setbtntext] = useState(\"Enable Dark Mode\")\n\n  // const togglestyle = () =>{\n  //   if (mystyle.color === 'white') {\n  //     setmystyle({\n  //       color:'black',\n  //   backgroundColor: 'white'\n  // })\n  // console.log(\"Dark mode enabled\");\n  //     setbtntext(\"Enable Dark mode\");\n  //   }\n  //   else{\n  //     setmystyle({\n  //       color:'white',\n  //   backgroundColor: 'black'\n  //     })\n  //     setbtntext(\"Enable Light Mode\")\n  //   }\n  // }\n\n  return (\n    <nav className={`navbar navbar-expand-lg bg-${props.mode} `} >\n  <div className=\"container-fluid\" >\n    <a className=\"navbar-brand\" href=\"/\" style={{color:\"#0000fd\"}}>TextUtiles</a>\n    <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n      <span className=\"navbar-toggler-icon\"></span>\n    </button>\n    <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\" >\n      <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\" >\n        <li className=\"nav-item\">\n          <a style={{color:\"#0000fd\"}} className=\"nav-link active\" aria-current=\"page\" href=\"/\">{props.home}</a>\n        </li>\n      </ul>\n      <button type='button' className='setcolorbtn setcolorbtnblue' onClick={props.togglemodeblue}>  </button>\n      <button type='button' className='setcolorbtn setcolorbtnred' onClick={props.togglemodered}>  </button>\n      <button type='button' className='setcolorbtn setcolorbtngreen' onClick={props.togglemodegreen}>  </button>\n      <button type='button' className='setcolorbtn setcolorbtnyellow' onClick={props.togglemodeyellow}>  </button>\n      <form className=\"d-flex\" role=\"search\">\n      <div className=\"form-check form-switch\">\n  <input className=\"form-check-input\" type=\"checkbox\" onClick={props.togglemode} id=\"flexSwitchCheckDefault\"/>\n  <label className={`form-check-label text-${props.mode==='light'?'grey':'white'}`} htmlFor=\"flexSwitchCheckDefault\">Enable Dark Mode</label>\n</div>\n      </form>\n    </div>\n  </div>\n</nav>\n  )\n}\n","import React, {useState}  from 'react'\n\nexport default function TextForm(props) {\n    const [text,setText] = useState('');\n    const handleUpClick=()=>{\n        let newText = text.toUpperCase();\n        setText(newText);\n        props.showAlert(\"Converted to Uppercase\",\"success\");\n    }\n    const handleOnChange=(event)=>{\n        setText(event.target.value);\n    }\n    const handleLoClick = ()=>{\n        let newText = text.toLowerCase();\n        setText(newText);\n        props.showAlert(\"Converted to Lowercase\",\"success\");\n    }\n    const handleClClick = ()=>{\n        let newText = \"\";\n        setText(newText);\n        props.showAlert(\"Text cleared\",\"success\");\n    }\n    const speak = () => {\n        let msg = new SpeechSynthesisUtterance();\n        msg.text = text;\n        window.speechSynthesis.speak(msg);\n        props.showAlert(\"Speaking\",\"success\");\n      }\n    const handleMyCopy = () =>{\n        var text = document.getElementById(\"myBox\");\n        text.select();\n        navigator.clipboard.writeText(text.value);\n        document.getSelection().removeAllRanges();\n        props.showAlert(\"Text copied\",\"success\");\n    }\n    const handleExtraSpace = ()=>{\n        let newText = text.split(/[ ]+/);\n        setText(newText.join(\" \"));\n        props.showAlert(\"Extra Spaces Removed!\",\"success\");\n    }\n    const keepbtnprimary = (word) => {\n        if (word === 'light' || word === 'dark') {\n            return \"primary\";\n        }\n        else{\n            return props.mode;\n        }\n    }\n    return (\n        <div>\n            <div className=\"mb-3\" style={{color: props.mode==='dark'?'white':'black'}}>\n                <h4>Enter Text Here</h4>\n                <textarea className=\"form-control\" value={text} onChange={handleOnChange} id=\"myBox\" rows=\"8\" style={{backgroundColor: props.mode==='dark'?'#3d3d3d':'white', color: props.mode==='dark'?'white':'black'}}></textarea>\n                <button disabled={text.length===0} type=\"button\" className={`btn btn-${keepbtnprimary(props.mode)} my-3 mx-2`} onClick={handleUpClick}>Convert To UpperCase</button>\n                <button disabled={text.length===0} type=\"button\" className={`btn btn-${keepbtnprimary(props.mode)} my-3 mx-2`} onClick={handleLoClick}>Convert To LowerCase</button>\n                <button disabled={text.length===0} type=\"button\" className={`btn btn-${keepbtnprimary(props.mode)} my-3 mx-2`} onClick={handleClClick}>Clear Text</button>\n                <button disabled={text.length===0} type=\"submit\" onClick={speak} className={`btn btn-${keepbtnprimary(props.mode)} mx-2 my-2`}>Speak</button>\n                <button disabled={text.length===0} type=\"button\" className={`btn btn-${keepbtnprimary(props.mode)} my-3 mx-2`} onClick={handleMyCopy}>Copy Text</button>\n                <button disabled={text.length===0} type=\"button\" className={`btn btn-${keepbtnprimary(props.mode)} my-3 mx-2`} onClick={handleExtraSpace}>Remove Extra Space</button>\n            </div>\n            <div style={{color: props.mode==='dark'?'white':'black'}}>\n                <h2>Your Text Summery</h2>\n                <p>{text.split(/\\s+/).filter((element)=>{return element.length!==0}).length } Words and {text.length} Characters</p>\n                <p>This text is readable in {text.lenght=== '0'?'0':0.008 * text.split(\" \").filter((element)=>{return element.length !== 0}).length} Minutes</p>\n                <h2>Preview</h2>\n                <p>{text.length>0?text:'Nothing to Preview'}</p>\n            </div>\n        </div>\n    )\n}\n","import React from 'react'\n\nfunction Alert(props) {\n    const capitalise = (word) =>{\n        const lower  = word.toLowerCase();\n        return lower.charAt(0).toUpperCase() + lower.slice(1);\n    }\n\n    return (\n        <div style={{height:'60px'}}>\n       {props.alert && <div className={`alert alert-${props.alert.type} alert-dismissible fade show`} role=\"alert\">\n            {capitalise(props.alert.type)} : {props.alert.msg}\n            </div>}\n        </div>\n    )\n}\n\nexport default Alert\n","import './App.css';\nimport Navbar from './Components/Navbar';\nimport TextForm from './Components/TextForm';\nimport Alert from './Components/Alert';\nimport React, {useState} from 'react'\n\n\nfunction App() {\n  const [Mode , setMode] = useState(\"light\");\n  const [alert , setAlert] = useState(null);\n  const showAlert = (message, type) =>{\n    setAlert({\n      msg:message,\n      type:type\n    })\n    setTimeout(() => {\n      setAlert(null);\n    }, 1000);\n  }\n  const togglemodeblue = () =>{\n    setMode('primary');\n    document.body.style.backgroundColor = 'blue' ;\n  }\n  const togglemodered = () =>{\n    setMode('danger');\n    document.body.style.backgroundColor = '#ff5d5d' ;\n  }\n  const togglemodegreen = () =>{\n    setMode('success');\n    document.body.style.backgroundColor = 'green' ;\n  }\n  const togglemodeyellow = () =>{\n    setMode('warning');\n    document.body.style.backgroundColor = 'yellow' ;\n  }\n const togglemode = () =>{\n    if(Mode === 'light' || Mode === 'primary' || Mode === 'danger' || Mode === 'success' || Mode === 'warning' ){\n      setMode('dark');\n      document.body.style.backgroundColor = '#3d3d3d' ;\n      showAlert(\"Dark Mode Enabled\",\"success\")\n    }\n    else {\n      setMode('light');\n      document.body.style.backgroundColor = 'white' ;\n      showAlert(\"Light Mode Enabled\",\"success\")\n    }\n }\n  return (\n    <>\n   <Navbar home = \"Home\" mode={Mode} togglemode = {togglemode} togglemodeblue = {togglemodeblue} togglemodered = {togglemodered} togglemodegreen = {togglemodegreen} togglemodeyellow = {togglemodeyellow} />\n   <Alert alert={alert}/>\n   <div className=\"container\" >\n   <TextForm showAlert={showAlert} mode={Mode}/>\n   </div>\n   </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}